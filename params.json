{"tagline":"A quick and easy way to visually test out your Rails application's API.","name":"Api taster","google":"","body":"# ApiTaster [![Build Status](https://secure.travis-ci.org/fredwu/api_taster.png?branch=master)](http://travis-ci.org/fredwu/api_taster) [![Dependency Status](https://gemnasium.com/fredwu/api_taster.png)](https://gemnasium.com/fredwu/api_taster)\r\n\r\nA quick and easy way to visually test out your Rails application's API.\r\n\r\n![](http://i.imgur.com/8Dnto.png)\r\n\r\n## Why?\r\n\r\nThere are already many awesome API clients (such as [Postman](https://chrome.google.com/webstore/detail/fdmmgilgnpjigdojojpjoooidkmcomcm)), so why reinvent the wheel?\r\n\r\nAPI Taster compared to alternatives, have the following advantages:\r\n\r\n- API endpoints are automatically generated from your Rails routes definition\r\n- Defining post params is as easy as defining routes\r\n- Post params can be shared with your test factories\r\n\r\n## Usage\r\n\r\nAdd API Taster in your gemfile:\r\n\r\n```ruby\r\ngem 'api_taster', :group => :development\r\n```\r\nMount API Taster, this will allow you to visit API Taster from within your app. For example:\r\n\r\n```ruby\r\nRails.application.routes.draw do\r\n  mount ApiTaster::Engine => \"/api_taster\" if Rails.env.development?\r\nend\r\n```\r\n\r\nAdd API Taster into the autoload paths in `development.rb`:\r\n\r\n```ruby\r\nconfig.autoload_paths += %W(\r\n  #{ApiTaster::Engine.root}\r\n)\r\n```\r\n\r\nIn `routes.rb`, define parameters for each API endpoint after the normal routes definition block. For example:\r\n\r\n```ruby\r\nif Rails.env.development?\r\n  ApiTaster.routes do\r\n    get '/users'\r\n\r\n    post '/users', {\r\n      :user => {\r\n        :name => 'Fred'\r\n      }\r\n    }\r\n\r\n    get '/users/:id', {\r\n      :id => 1\r\n    }\r\n\r\n    put '/users/:id', {\r\n      :id => 1, :user => {\r\n        :name => 'Awesome'\r\n      }\r\n    }\r\n\r\n    delete '/users/:id', {\r\n      :id => 1\r\n    }\r\n  end\r\nend\r\n```\r\n\r\n### Share Params with Test Factories\r\n\r\nIf you use a test factory such as [FactoryGirl](https://github.com/thoughtbot/factory_girl), you can require your test factories and share the params. For example in FactoryGirl you can use the `attributes_for(:name_of_factory)` method.\r\n\r\n### Missing Route Definitions Detection\r\n\r\nInstead of manually finding out which route definitions you need, API Taster provides a warning page that shows you all the missing definitions.\r\n\r\n![](http://i.imgur.com/vZb93.png)\r\n\r\n### Obsolete / Mismatched Route Definitions Detection\r\n\r\nAPIs evolve - especially during the development stage. To keep `ApiTaster.routes` in sync with your route definitions, API Taster provides a warning page that shows you the definitions that are obsolete/mismatched therefore you could correct or remove them.\r\n\r\n![](http://i.imgur.com/qK7g5.png)\r\n\r\n### Use with an Engine\r\n\r\nRails Engines are largely self contained and separated from your main app. Therefore, to use API Taster with an Engine, you would need some extra efforts:\r\n\r\nIn your app Gemfile, you would also need:\r\n\r\n```ruby\r\ngem \"jquery-rails\"\r\ngem \"bootstrap-sass\"\r\n```\r\n\r\nIf you are hand-picking Rails components, make sure in your `application.rb` you have Sprockets enabled:\r\n\r\n```ruby\r\nrequire \"sprockets/railtie\"\r\n```\r\n\r\n## License\r\n\r\nThis gem is released under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\r\n\r\n## Author\r\n\r\n[Fred Wu](https://github.com/fredwu), originally built for [Locomote](http://locomote.com.au).\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}